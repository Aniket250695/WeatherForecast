{"version":3,"sources":["DateTimeShow.jsx","App.js","index.js"],"names":["ShowDateTime","time","Date","toLocaleTimeString","useState","stime","settime","date","toLocaleDateString","sdate","setDate","setInterval","App","bgImage","setBgImage","Loc","setLoc","Loc1","setLoc1","temp","setTemp","humidity","setHumidity","tempType","setTempType","className","src","process","alt","type","placeholder","onChange","event","target","value","onClick","a","fetch","then","fetchVal","json","getVal","T","Math","round","main","name","catch","error","alert","fetchData","style","backgroundImage","backgroundRepeat","backgroundSize","ReactDOM","render","document","getElementById"],"mappings":"sNA4BeA,MA1Bf,WACE,IAAIC,GAAO,IAAIC,MAAOC,qBAClB,EAAmBC,mBAASH,GAAhC,mBAAKI,EAAL,KAAYC,EAAZ,KAEIC,GAAO,IAAIL,MAAOM,qBAClB,EAAmBJ,mBAASG,GAAhC,mBAAKE,EAAL,KAAYC,EAAZ,KAeA,OAHAC,aAViB,WACfV,GAAO,IAAIC,MAAOC,qBAClBG,EAAQL,KAQc,KACxBU,aANiB,WACfJ,GAAO,IAAIL,MAAOM,qBAClBE,EAAQH,KAIc,MAGtB,gCACGE,EADH,KACYJ,M,YCwDDO,MA3Ef,WACE,MAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsBV,qBAAtB,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAAwBZ,mBAASW,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAwBd,mBAAS,IAAjC,mBAAOe,EAAP,KAAaC,EAAb,KACA,EAAgChB,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KA0CA,OACE,qCACE,sBAAKC,UAAU,gFAAf,UACE,qBAAKA,UAAU,qBAAqBC,IAAKC,oDAA4DC,IAAI,KACzG,uBAAOC,KAAK,OAAOJ,UAAU,mBAAmBK,YAAY,yBAAyBC,SA5C3F,SAAgBC,GACdhB,EAAOgB,EAAMC,OAAOC,UA4ChB,wBAAQT,UAAU,WAAWU,QAzCnC,YAEe,uCAAG,sBAAAC,EAAA,sDAEdC,MAAM,qDAAD,OACkDtB,EADlD,yDAEHuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MACjC,SAAAG,GACW,IAAIC,EAAIC,KAAKC,MAAMH,EAAOI,KAAK1B,MAC3BuB,EAAI,IACRxB,EAAQuB,EAAOK,MACf1B,EAAQsB,GACRlB,EAAY,QACZF,EAAYmB,EAAOI,KAAKxB,UACxBP,EAAWa,uCACAe,EAAI,IAAMA,GAAK,GAC1BxB,EAAQuB,EAAOK,MACf1B,EAAQsB,GACRlB,EAAY,QACZF,EAAYmB,EAAOI,KAAKxB,UACxBP,EAAWa,uCAEXT,EAAQuB,EAAOK,MACf1B,EAAQsB,GACRlB,EAAY,YACZF,EAAYmB,EAAOI,KAAKxB,UACxBP,EAAWa,0CAGlBoB,OAAM,SAAAC,GAAK,OAAGC,MAAM,6BA3Bb,2CAAH,qDA8BbC,IASI,SACE,qBAAKxB,IAAKC,2CAAmDF,UAAU,WAAWG,IAAI,UAI1F,sBACEuB,MAAO,CAAEC,gBAAgB,OAAD,OAASvC,EAAT,KAAqBwC,iBAAkB,YAAaC,eAAgB,SAAY7B,UAAU,yEADpH,UAEE,qBAAIA,UAAU,0BAAd,UACE,qBAAKA,UAAU,gBAAgBC,IAAKC,mDAA2DC,IAAI,KAAM,IACxGX,KAEH,qBAAKQ,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,iBAAf,UAAiCN,EAAjC,WACA,qBAAKM,UAAU,iBAAf,SAAiCF,IACjC,sBAAKE,UAAU,iBAAf,uBAA2CJ,EAA3C,cCrERkC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ffdb8050.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ShowDateTime() {\r\n  var time = new Date().toLocaleTimeString();\r\n  var [stime, settime] = useState(time);\r\n\r\n  var date = new Date().toLocaleDateString();\r\n  var [sdate, setDate] = useState(date);\r\n\r\n  var updateTime = () => {\r\n    time = new Date().toLocaleTimeString();\r\n    settime(time);\r\n  };\r\n\r\n  var updateDate = () => {\r\n    date = new Date().toLocaleDateString();\r\n    setDate(date);\r\n  };\r\n\r\n  setInterval(updateTime, 1000);\r\n  setInterval(updateDate, 360000);\r\n\r\n  return (\r\n    <div>\r\n      {sdate}, {stime}\r\n    </div>\r\n  );\r\n}\r\nexport default ShowDateTime;\r\n","import React, { useState } from \"react\";\nimport DateTime from \"./DateTimeShow\";\nimport \"./App.css\";\nimport \"./bootstrap.css\";\n\nfunction App() {\n  const [bgImage, setBgImage] = useState(\"\");\n  const [Loc, setLoc] = useState();\n  const [Loc1, setLoc1] = useState(Loc);\n  const [temp, setTemp] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [tempType, setTempType] = useState(\"\");\n\n  function getLoc(event) {\n    setLoc(event.target.value);\n  }\n\n  function getLoc1() {\n  \n    var fetchData = async () => {\n    \n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${Loc}&units=metric&appid=6e9c29b131bd724e80785ff74ea9c1cd`\n      ).then(fetchVal => fetchVal.json()).then(\n        (getVal=>{\n                    var T = Math.round(getVal.main.temp);\n                    if (T > 30) {\n                    setLoc1(getVal.name);\n                    setTemp(T);\n                    setTempType(\"Warm\");\n                    setHumidity(getVal.main.humidity);\n                    setBgImage(process.env.PUBLIC_URL+\"/Images/Summer.jpg\");\n                    } else if (T < 30 && T >= 0) {\n                    setLoc1(getVal.name);\n                    setTemp(T);\n                    setTempType(\"Cold\");\n                    setHumidity(getVal.main.humidity);\n                    setBgImage(process.env.PUBLIC_URL+\"/Images/Cold.jfif\");\n                    } else{\n                    setLoc1(getVal.name);\n                    setTemp(T);\n                    setTempType(\"Snowfall\");\n                    setHumidity(getVal.main.humidity);\n                    setBgImage(process.env.PUBLIC_URL+\"/Images/Winter.jpg\");\n                    }\n                  }\n          )).catch(error =>alert('Enter Correct CityName'));\n  \n    };\n    fetchData();\n  \n  }\n\n  return (\n    <>\n      <div className=\"container sticky-top nav_bar d-flex justify-content-center align-items-center\">\n        <img className=\"forecast_logo me-5\" src={process.env.PUBLIC_URL+'/Images/weather-forecast-logo.jpg'} alt=\"\" />\n        <input type=\"text\" className=\"search_bar col-6\" placeholder=\"Search here...Cityname\" onChange={getLoc} />\n        <button className=\"btn_size\" onClick={getLoc1}>\n          <img src={process.env.PUBLIC_URL+\"/Images/search-solid.svg\"} className=\"btn_logo\" alt=\"\" />\n        </button>\n      </div>\n\n      <div\n        style={{ backgroundImage: `url(${bgImage})`, backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\", }} className=\"container nav_barBody d-flex justify-content-center align-items-center\" >\n        <h2 className=\"location col-6 tmp_type\">\n          <img className=\"location_logo\" src={process.env.PUBLIC_URL+\"/Images/map-marker-alt-solid.svg\"} alt=\"\" />{\" \"}\n          {Loc1}\n        </h2>\n        <div className=\"tmp_type col-6\">\n          <DateTime />\n        </div>\n        <div className=\"tmp_show col-6\">{temp}Â°C</div>\n        <div className=\"tmp_type col-6\">{tempType}</div>\n        <div className=\"tmp_type col-6\">Humidity: {humidity}%</div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}